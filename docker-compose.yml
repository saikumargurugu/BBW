services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
      - .:/code
    env_file:
      - .env
    depends_on:
      - redis
      - db
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: >
      sh -c "
      until pg_isready -h db -U ${POSTGRES_USER} -d ${POSTGRES_DB}; do
        echo 'Waiting for database...';
        sleep 2;
        done &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000"

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
  nginx:
    image: nginx:latest
    ports:
      - "80:80"    # Exposes nginx to port 80 (HTTP)
      - "443:443"  # Exposes nginx to port 443 (HTTPS)
    depends_on:
      - web
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
      - .:/code

  make-migrations:
    build: .
    command: >
      sh -c "
      echo 'printing pip freeze' &&
      pip freeze &&
      echo 'printing pip list' &&
      pip install --no-cache-dir -r requirements.txt &&
             python manage.py makemigrations"
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      web:  # Depend on the web container to ensure its environment is ready
        condition: service_started
      db:
        condition: service_healthy
    profiles:
      - tasks

  migrate:
    build: .
    command: sh -c "python manage.py migrate"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
      - .:/code
    depends_on:
      - db
    profiles:
      - tasks

  db:
    image: postgres:14
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      retries: 5

volumes:
  postgres_data:
